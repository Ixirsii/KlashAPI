[versions]
arrow = "1.2.4"
axion = "1.18.9"
detekt = "1.23.7"
dokka = "1.9.20"
junit = "5.11.0"
kotlinxSerialization = "1.7.2"
kover = "0.8.3"
logback = "1.5.8"
nexusPublish = "2.0.0"
okhttp = "5.0.0-alpha.14"
reactorKotlinExtensions = "1.2.3"
reactor = "2023.0.10"
slf4J = "2.0.16"

[libraries]
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-rules-libraries = { module = "io.gitlab.arturbosch.detekt:detekt-rules-libraries", version.ref = "detekt" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
reactor-bom = { module = "io.projectreactor:reactor-bom", version.ref = "reactor" }
reactor-core = { module = "io.projectreactor:reactor-core" }
reactor-kotlin-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions", version.ref = "reactorKotlinExtensions" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4J" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

[bundles]
detekt = ["detekt-formatting", "detekt-rules-libraries"]
junit = ["junit-jupiter", "junit-jupiter-params"]

[plugins]
axion = { id = "pl.allegro.tech.build.axion-release", version.ref = "axion" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
nexus-publish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexusPublish" }
